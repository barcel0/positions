{"version":3,"sources":["helpers/numberWithCommas.js","Components/Icons/ChartIcon.js","Components/NavBar.js","actions/contractActions.js","actions/types.js","Components/Icons/SearchIcon.js","Components/Icons/CloseIcon.js","Components/Main/SearchBar.js","Components/Icons/ListIcon.js","Components/Icons/FileIcon.js","Components/Icons/ChevronsDownIcon.js","Components/Icons/ArrowUpCircleIcon.js","Components/Main/ContractList.js","Components/Main/Main.js","Components/Icons/FileTextIcon.js","Components/Contract/DoughnutChart.js","helpers/getWeekRange.js","Components/Icons/CalendarIcon.js","Components/Icons/ChevronsLeftIcon.js","Components/Icons/ChevronsRightIcon.js","Components/Contract/Weekly.js","Components/Contract/Financial/VolumeFinancial.js","Components/Contract/Financial/PositionsFinancial.js","Components/Icons/TrendUpIcon.js","Components/Contract/Financial/HistoricalFinancial.js","Components/Contract/Disaggregated/VolumeDisaggregated.js","Components/Contract/Disaggregated/PositionsDisaggregated.js","Components/Contract/Disaggregated/HistoricalDisaggregated.js","Components/Contract/Contract.js","Components/Icons/SettingsIcon.js","Components/Icons/EyeIcon.js","actions/errorActions.js","actions/authActions.js","actions/adminActions.js","Components/Adm/AdmPanel.js","Components/Adm/Login.js","Components/Adm/Adm.js","Components/Footer.js","reducers/contractReducer.js","reducers/adminReducer.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","Components/GA.js","App.js","serviceWorker.js","index.js","helpers/dateFormatter.js"],"names":["module","exports","x","toString","replace","ChartIcon","style","fill","width","className","viewBox","xmlns","height","transform","d","stroke","strokeWidth","NavBar","to","setLoading","status","dispatch","type","payload","getContracts","axios","get","then","res","data","updateSearchFilter","searchString","setSelectedContractType","setActiveWeek","category","selectedWeekIndex","selectedWeek","weekIndex","date","As_of_Date_In_Form_YYMMDD","mktName","Market_and_Exchange_Names","cftcCode","CFTC_Contract_Market_Code","contractUnits","Contract_Units","openInterestAll","Open_Interest_All","tradersAll","Traders_Tot_All","dealer","positions","Dealer_Positions_Long_All","Dealer_Positions_Short_All","Dealer_Positions_Spread_All","changes","Change_in_Dealer_Long_All","Change_in_Dealer_Short_All","Change_in_Dealer_Spread_All","openInterest","Pct_of_OI_Dealer_Long_All","Pct_of_OI_Dealer_Short_All","Pct_of_OI_Dealer_Spread_All","traders","Traders_Dealer_Long_All","Traders_Dealer_Short_All","Traders_Dealer_Spread_All","assetMgr","Asset_Mgr_Positions_Long_All","Asset_Mgr_Positions_Short_All","Asset_Mgr_Positions_Spread_All","Change_in_Asset_Mgr_Long_All","Change_in_Asset_Mgr_Short_All","Change_in_Asset_Mgr_Spread_All","Pct_of_OI_Asset_Mgr_Long_All","Pct_of_OI_Asset_Mgr_Short_All","Pct_of_OI_Asset_Mgr_Spread_All","Traders_Asset_Mgr_Long_All","Traders_Asset_Mgr_Short_All","Traders_Asset_Mgr_Spread_All","levFunds","Lev_Money_Positions_Long_All","Lev_Money_Positions_Short_All","Lev_Money_Positions_Spread_All","Change_in_Lev_Money_Long_All","Change_in_Lev_Money_Short_All","Change_in_Lev_Money_Spread_All","Pct_of_OI_Lev_Money_Long_All","Pct_of_OI_Lev_Money_Short_All","Pct_of_OI_Lev_Money_Spread_All","Traders_Lev_Money_Long_All","Traders_Lev_Money_Short_All","Traders_Lev_Money_Spread_All","otherRep","Other_Rept_Positions_Long_All","Other_Rept_Positions_Short_All","Other_Rept_Positions_Spread_All","Change_in_Other_Rept_Long_All","Change_in_Other_Rept_Short_All","Change_in_Other_Rept_Spread_All","Pct_of_OI_Other_Rept_Long_All","Pct_of_OI_Other_Rept_Short_All","Pct_of_OI_Other_Rept_Spread_All","Traders_Other_Rept_Long_All","Traders_Other_Rept_Short_All","Traders_Other_Rept_Spread_All","nonRep","NonRept_Positions_Long_All","NonRept_Positions_Short_All","Change_in_NonRept_Long_All","Change_in_NonRept_Short_All","Pct_of_OI_NonRept_Long_All","Pct_of_OI_NonRept_Short_All","prodMerc","Prod_Merc_Positions_Long_ALL","Prod_Merc_Positions_Short_ALL","Change_in_Prod_Merc_Long_All","Change_in_Prod_Merc_Short_All","Pct_of_OI_Prod_Merc_Long_All","Pct_of_OI_Prod_Merc_Short_All","Traders_Prod_Merc_Long_All","Traders_Prod_Merc_Short_All","swap","Swap_Positions_Long_All","Swap__Positions_Short_All","Swap__Positions_Spread_All","Change_in_Swap_Long_All","Change_in_Swap_Short_All","Change_in_Swap_Spread_All","Pct_of_OI_Swap_Long_All","Pct_of_OI_Swap_Short_All","Pct_of_OI_Swap_Spread_All","Traders_Swap_Long_All","Traders_Swap_Short_All","Traders_Swap_Spread_All","mMoney","M_Money_Positions_Long_ALL","M_Money_Positions_Short_ALL","M_Money_Positions_Spread_ALL","Change_in_M_Money_Long_All","Change_in_M_Money_Short_All","Change_in_M_Money_Spread_All","Pct_of_OI_M_Money_Long_All","Pct_of_OI_M_Money_Short_All","Pct_of_OI_M_Money_Spread_All","Traders_M_Money_Long_All","Traders_M_Money_Short_All","Traders_M_Money_Spread_All","Other_Rept_Positions_Long_ALL","Other_Rept_Positions_Short_ALL","Other_Rept_Positions_Spread_ALL","SearchIcon","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","CloseIcon","stroke-width","stroke-linecap","stroke-linejoin","class","connect","state","contracts","props","useState","formValue","setFormValue","id","name","placeholder","value","onChange","e","target","length","handleSearchInput","searchFilter","onClick","serveCloseIcon","ListIcon","FileIcon","points","ChevronsDownIcon","ArrowUpCircleIcon","filterContracts","list","listFilter","filter","item","toLowerCase","match","updateListFilter","loadedAmount","setLoadedAmount","useEffect","serveChangeData","numbersWithCommas","handleLoadMore","filteredList","title","slice","map","slug","key","_id","Date","lastUpdate","toLocaleString","year","month","day","changeLong","changeShort","serveLoadMore","href","loading","content","FileTextIcon","setTitle","options","circumference","Math","PI","rotation","cutoutPercentage","legend","display","labels","datasets","backgroundColor","week","percentage","total","change","toFixed","setDataColor","moment","require","getWeekRange","rawDate","dateFormater","startOfWeek","startOf","toDate","endOfWeek","endOf","format","CalendarIcon","y","rx","ry","ChevronsLeftIcon","ChevronsRightIcon","activeWeek","selectedContractActiveWeek","activeWeekIndex","mostRecentWeekIndex","selectedContractPositions","handleNavigationClick","direction","DoughnutChart","serveDoughnuts","setData","timeRange","newData","label","forEach","position","push","dateFormatter","longTotal","shortTotal","spreadTotal","classDealer","classAssetMgr","classLevFunds","classOtherRep","classNonRep","fillPositions","text","fontSize","hover","onHover","this","getElementAtEvent","cursor","scales","yAxes","stacked","ticks","fontStyle","xAxes","maxRotation","minRotation","elems","_model","handleWeekClick","window","scrollTo","handleBarClick","lineTension","borderWidth","borderColor","pointBackgroundColor","pointRadius","elemIndex","_index","_xScale","_ticks","handleLineClick","TrendUpIcon","setTimeRange","setClassDealer","setClassAssetMgr","setClassLevFunds","setClassOtherRep","setClassNonRep","handleCheck","checkId","defaultChecked","htmlFor","classProdMerc","classSwap","classMMoney","console","log","setClassProdMerc","setClassSwap","setClassMMoney","getContractPositions","apiURL","contractType","contractCategory","contractSlug","selectedContractType","targetDate","findIndex","obj","handleTypeClick","marketName","serveContent","SettingsIcon","EyeIcon","returnErrors","msg","tokenConfig","getState","token","auth","config","headers","setParsing","isAuthenticated","parser","error","logout","parsePositions","post","catch","err","response","clearErrors","setPositions","parseCategory","setParseCategory","serveError","onSubmit","preventDefault","handleParseSubmit","action","method","rows","handleInputChange","Array","isArray","formattedArr","logLine","serveParserLog","login","email","password","body","JSON","stringify","setEmail","setPassword","setMsg","input","handleSubmit","autocomplete","Footer","initialState","isLoading","localStorage","getItem","user","combineReducers","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","GoogleAnalytics","location","history","gtag","pathname","document","React","Component","withRouter","App","path","exact","component","Main","render","params","contractslug","contractcategory","Adm","GA","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","strDate","outputFormat","substring"],"mappings":"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","file":"static/js/main.61609fda.chunk.js","sourcesContent":["//https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n\r\nconst numberWithCommas = (x) => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nmodule.exports = numberWithCommas;","import React from 'react';\r\n\r\nconst ChartIcon = ({\r\n  style = {  },\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n\r\n<svg \r\n  xmlns=\"http://www.w3.org/2000/svg\" \r\n  width=\"30\" \r\n  height=\"30\" \r\n  viewBox=\"0 0 100 100\"\r\n>\r\n  <g transform=\"translate(0,-952.36218)\">\r\n    <path \r\n      d=\"m 75,976.3622 0,52 10,0 0,-52 -10,0 z m -40,8 0,44 10,0 0,-44 -10,0 z m 20,8 0,36 10,0 0,-36 -10,0 z m -40,8 0,28 10,0 0,-28 -10,0 z\" \r\n      fill=\"white\" \r\n      stroke=\"white\" \r\n      strokeWidth=\"2\" \r\n      // stroke-linecap=\"square\" \r\n      // stroke-linejoin=\"square\" \r\n      className=\"chart\"\r\n    />\r\n  </g>\r\n</svg>\r\n\r\n);\r\n\r\nexport default ChartIcon;","import React from 'react';\r\nimport ChartIcon from './Icons/ChartIcon';\r\nimport { Link } from 'react-router-dom';\r\n// import ReactGA from 'react-ga';\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n\r\n  // ReactGA.initialize('UA-164495098-1');\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Link to='/'><ChartIcon /><h1 className=\"title\">Commitments of Traders</h1></Link>\r\n      </header>\r\n      <nav>The Commitments of Traders is a weekly market report issued by the Commodity Futures Trading Commission (CFTC) enumerating the holdings of participants in various futures markets in the United States.</nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import {\r\n  SET_LOADING,\r\n  GET_CONTRACTS,\r\n  FILTER_CONTRACTS,\r\n  UPDATE_SEARCH_FILTER,\r\n  UPDATE_LIST_FILTER,\r\n  GET_CONTRACT_POSITIONS,\r\n  SET_ACTIVE_WEEK,\r\n  SET_SELECTED_CONTRACT_TYPE,\r\n} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const setLoading = (status) => dispatch => {\r\n  dispatch({\r\n    type: SET_LOADING,\r\n    payload: status\r\n  });\r\n}\r\n\r\nexport const getContracts = () => dispatch => {\r\n  axios\r\n    .get('/api/contract')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_CONTRACTS,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .then(() => dispatch(setLoading(false)));\r\n}\r\n\r\nexport const filterContracts = (list, listFilter, searchFilter) => dispatch => {\r\n  if (listFilter !== 'all') {\r\n    const filteredList = list.filter(item => item.category === listFilter && item.name.toLowerCase().match(searchFilter.toLowerCase()));\r\n    dispatch({\r\n      type: FILTER_CONTRACTS,\r\n      payload: filteredList\r\n    });\r\n  } else {\r\n    const filteredList = list.filter(item => item.name.toLowerCase().match(searchFilter.toLowerCase()));\r\n    dispatch({\r\n      type: FILTER_CONTRACTS,\r\n      payload: filteredList\r\n    });\r\n  }\r\n}\r\n\r\nexport const updateSearchFilter = (searchString) => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_SEARCH_FILTER,\r\n    payload: searchString\r\n  });\r\n}\r\n\r\nexport const updateListFilter = (filter) => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_LIST_FILTER,\r\n    payload: filter\r\n  });\r\n}\r\n\r\nexport const setSelectedContractType = (type) => dispatch => {\r\n  dispatch({\r\n    type: SET_SELECTED_CONTRACT_TYPE,\r\n    payload: type\r\n  });\r\n}\r\n\r\nexport const getContractPositions = (category, slug, type) => dispatch => {\r\n  const apiURL = `/api/position/${category}/${slug}/${type}`;\r\n  dispatch(setLoading(true));\r\n  dispatch(updateSearchFilter(''));\r\n  axios\r\n    .get(apiURL)\r\n    .then(res => {\r\n      dispatch(setActiveWeek(category, res.data, res.data.length - 1));\r\n      dispatch({\r\n        type: GET_CONTRACT_POSITIONS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .then(() => dispatch(setSelectedContractType(type)))\r\n    .then(() => dispatch(setLoading(false)))\r\n}\r\n\r\nexport const setActiveWeek = (category, data, selectedWeekIndex) => dispatch => {\r\n  const selectedWeek = data[selectedWeekIndex];\r\n\r\n  if (selectedWeek && category === 'financial') {\r\n    const activeWeek = {\r\n      category: category,\r\n      weekIndex: selectedWeekIndex,\r\n      date: selectedWeek.As_of_Date_In_Form_YYMMDD,\r\n      mktName: selectedWeek.Market_and_Exchange_Names,\r\n      cftcCode: selectedWeek.CFTC_Contract_Market_Code,\r\n      contractUnits: selectedWeek.Contract_Units,\r\n      openInterestAll: selectedWeek.Open_Interest_All,\r\n      tradersAll: selectedWeek.Traders_Tot_All,\r\n      dealer: {\r\n        positions: [selectedWeek.Dealer_Positions_Long_All, selectedWeek.Dealer_Positions_Short_All, selectedWeek.Dealer_Positions_Spread_All],\r\n        changes: [selectedWeek.Change_in_Dealer_Long_All, selectedWeek.Change_in_Dealer_Short_All, selectedWeek.Change_in_Dealer_Spread_All],\r\n        openInterest: [selectedWeek.Pct_of_OI_Dealer_Long_All, selectedWeek.Pct_of_OI_Dealer_Short_All, selectedWeek.Pct_of_OI_Dealer_Spread_All],\r\n        traders: [selectedWeek.Traders_Dealer_Long_All, selectedWeek.Traders_Dealer_Short_All, selectedWeek.Traders_Dealer_Spread_All]\r\n      },\r\n      assetMgr: {\r\n        positions: [selectedWeek.Asset_Mgr_Positions_Long_All, selectedWeek.Asset_Mgr_Positions_Short_All, selectedWeek.Asset_Mgr_Positions_Spread_All],\r\n        changes: [selectedWeek.Change_in_Asset_Mgr_Long_All, selectedWeek.Change_in_Asset_Mgr_Short_All, selectedWeek.Change_in_Asset_Mgr_Spread_All],\r\n        openInterest: [selectedWeek.Pct_of_OI_Asset_Mgr_Long_All, selectedWeek.Pct_of_OI_Asset_Mgr_Short_All, selectedWeek.Pct_of_OI_Asset_Mgr_Spread_All],\r\n        traders: [selectedWeek.Traders_Asset_Mgr_Long_All, selectedWeek.Traders_Asset_Mgr_Short_All, selectedWeek.Traders_Asset_Mgr_Spread_All]\r\n      },\r\n      levFunds: {\r\n        positions: [selectedWeek.Lev_Money_Positions_Long_All, selectedWeek.Lev_Money_Positions_Short_All, selectedWeek.Lev_Money_Positions_Spread_All],\r\n        changes: [selectedWeek.Change_in_Lev_Money_Long_All, selectedWeek.Change_in_Lev_Money_Short_All, selectedWeek.Change_in_Lev_Money_Spread_All],\r\n        openInterest: [selectedWeek.Pct_of_OI_Lev_Money_Long_All, selectedWeek.Pct_of_OI_Lev_Money_Short_All, selectedWeek.Pct_of_OI_Lev_Money_Spread_All],\r\n        traders: [selectedWeek.Traders_Lev_Money_Long_All, selectedWeek.Traders_Lev_Money_Short_All, selectedWeek.Traders_Lev_Money_Spread_All]\r\n      },\r\n      otherRep: {\r\n        positions: [selectedWeek.Other_Rept_Positions_Long_All, selectedWeek.Other_Rept_Positions_Short_All, selectedWeek.Other_Rept_Positions_Spread_All],\r\n        changes: [selectedWeek.Change_in_Other_Rept_Long_All, selectedWeek.Change_in_Other_Rept_Short_All, selectedWeek.Change_in_Other_Rept_Spread_All],\r\n        openInterest: [selectedWeek.Pct_of_OI_Other_Rept_Long_All, selectedWeek.Pct_of_OI_Other_Rept_Short_All, selectedWeek.Pct_of_OI_Other_Rept_Spread_All],\r\n        traders: [selectedWeek.Traders_Other_Rept_Long_All, selectedWeek.Traders_Other_Rept_Short_All, selectedWeek.Traders_Other_Rept_Spread_All]\r\n      },\r\n      nonRep: {\r\n        positions: [selectedWeek.NonRept_Positions_Long_All, selectedWeek.NonRept_Positions_Short_All, 0],\r\n        changes: [selectedWeek.Change_in_NonRept_Long_All, selectedWeek.Change_in_NonRept_Short_All, 0],\r\n        openInterest: [selectedWeek.Pct_of_OI_NonRept_Long_All, selectedWeek.Pct_of_OI_NonRept_Short_All, 0],\r\n        traders: ['-', '-', '-']\r\n      }\r\n    }\r\n    dispatch({\r\n      type: SET_ACTIVE_WEEK,\r\n      payload: activeWeek\r\n    });\r\n\r\n  } else if (selectedWeek && category === 'disaggregated') {\r\n    const activeWeek = {\r\n      category: category,\r\n      weekIndex: selectedWeekIndex,\r\n      date: selectedWeek.As_of_Date_In_Form_YYMMDD,\r\n      mktName: selectedWeek.Market_and_Exchange_Names,\r\n      cftcCode: selectedWeek.CFTC_Contract_Market_Code,\r\n      contractUnits: selectedWeek.Contract_Units,\r\n      openInterestAll: selectedWeek.Open_Interest_All,\r\n      tradersAll: selectedWeek.Traders_Tot_All,\r\n      prodMerc: {\r\n        positions: [selectedWeek.Prod_Merc_Positions_Long_ALL, selectedWeek.Prod_Merc_Positions_Short_ALL, 0],\r\n        changes: [selectedWeek.Change_in_Prod_Merc_Long_All, selectedWeek.Change_in_Prod_Merc_Short_All, 0],\r\n        openInterest: [selectedWeek.Pct_of_OI_Prod_Merc_Long_All, selectedWeek.Pct_of_OI_Prod_Merc_Short_All, 0],\r\n        traders: [selectedWeek.Traders_Prod_Merc_Long_All, selectedWeek.Traders_Prod_Merc_Short_All, 0]\r\n      },\r\n      swap: {\r\n        positions: [selectedWeek.Swap_Positions_Long_All, selectedWeek.Swap__Positions_Short_All, selectedWeek.Swap__Positions_Spread_All],\r\n        changes: [selectedWeek.Change_in_Swap_Long_All, selectedWeek.Change_in_Swap_Short_All, selectedWeek.Change_in_Swap_Spread_All],\r\n        openInterest: [selectedWeek.Pct_of_OI_Swap_Long_All, selectedWeek.Pct_of_OI_Swap_Short_All, selectedWeek.Pct_of_OI_Swap_Spread_All],\r\n        traders: [selectedWeek.Traders_Swap_Long_All, selectedWeek.Traders_Swap_Short_All, selectedWeek.Traders_Swap_Spread_All]\r\n      },\r\n      mMoney: {\r\n        positions: [selectedWeek.M_Money_Positions_Long_ALL, selectedWeek.M_Money_Positions_Short_ALL, selectedWeek.M_Money_Positions_Spread_ALL],\r\n        changes: [selectedWeek.Change_in_M_Money_Long_All, selectedWeek.Change_in_M_Money_Short_All, selectedWeek.Change_in_M_Money_Spread_All],\r\n        openInterest: [selectedWeek.Pct_of_OI_M_Money_Long_All, selectedWeek.Pct_of_OI_M_Money_Short_All, selectedWeek.Pct_of_OI_M_Money_Spread_All],\r\n        traders: [selectedWeek.Traders_M_Money_Long_All, selectedWeek.Traders_M_Money_Short_All, selectedWeek.Traders_M_Money_Spread_All]\r\n      },\r\n      otherRep: {\r\n        positions: [selectedWeek.Other_Rept_Positions_Long_ALL, selectedWeek.Other_Rept_Positions_Short_ALL, selectedWeek.Other_Rept_Positions_Spread_ALL],\r\n        changes: [selectedWeek.Change_in_Other_Rept_Long_All, selectedWeek.Change_in_Other_Rept_Short_All, selectedWeek.Change_in_Other_Rept_Spread_All],\r\n        openInterest: [selectedWeek.Pct_of_OI_Other_Rept_Long_All, selectedWeek.Pct_of_OI_Other_Rept_Short_All, selectedWeek.Pct_of_OI_Other_Rept_Spread_All],\r\n        traders: [selectedWeek.Traders_Other_Rept_Long_All, selectedWeek.Traders_Other_Rept_Short_All, selectedWeek.Traders_Other_Rept_Spread_All]\r\n      },\r\n      nonRep: {\r\n        positions: [selectedWeek.NonRept_Positions_Long_All, selectedWeek.NonRept_Positions_Short_All, 0],\r\n        changes: [selectedWeek.Change_in_NonRept_Long_All, selectedWeek.Change_in_NonRept_Short_All, 0],\r\n        openInterest: [selectedWeek.Pct_of_OI_NonRept_Long_All, selectedWeek.Pct_of_OI_NonRept_Short_All, 0],\r\n        traders: ['-', '-', '-']\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: SET_ACTIVE_WEEK,\r\n      payload: activeWeek\r\n    });\r\n\r\n  }\r\n}","export const SET_LOADING = 'SET_LOADING';\r\nexport const GET_CONTRACTS = 'GET_CONTRACTS';\r\nexport const FILTER_CONTRACTS = 'FILTER_CONTRACTS';\r\nexport const SET_SELECTED_CONTRACT_TYPE = 'SET_SELECTED_CONTRACT_TYPE';\r\nexport const UPDATE_SEARCH_FILTER = 'UPDATE_SEARCH_FILTER';\r\nexport const UPDATE_LIST_FILTER = 'UPDATE_LIST_FILTER';\r\nexport const GET_CONTRACT_POSITIONS = 'GET_CONTRACT_POSITIONS';\r\nexport const SET_ACTIVE_WEEK = 'SET_ACTIVE_WEEK';\r\n\r\nexport const USER_LOADING = 'USER_LOADING';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n\r\nexport const PARSE_SUCCESS = 'PARSE_SUCCESS';\r\nexport const PARSE_FAIL = 'PARSE_FAIL';\r\nexport const PARSE_LOADING = 'PARSE_LOADING';","import React from 'react';\r\n\r\nconst SearchIcon = ({\r\n  style = {  },\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n<svg \r\n  xmlns=\"http://www.w3.org/2000/svg\" \r\n  width=\"24\" \r\n  height=\"24\" \r\n  viewBox=\"0 0 24 24\" \r\n  fill=\"none\" \r\n  stroke=\"currentColor\" \r\n  strokeWidth=\"2\" \r\n  strokeLinecap=\"round\" \r\n  strokeLinejoin=\"round\" \r\n  className=\"feather feather-search\"\r\n>\r\n  <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n  <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n</svg>\r\n\r\n);\r\n\r\nexport default SearchIcon;","import React from 'react';\r\n\r\nconst CloseIcon = ({\r\n  style = {  },\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n<svg \r\n  xmlns=\"http://www.w3.org/2000/svg\" \r\n  width=\"24\" \r\n  height=\"24\" \r\n  viewBox=\"0 0 24 24\" \r\n  fill=\"none\" \r\n  stroke=\"currentColor\" \r\n  stroke-width=\"2\" \r\n  stroke-linecap=\"round\" \r\n  stroke-linejoin=\"round\" \r\n  class=\"feather feather-x\"\r\n>\r\n  <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n  <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n</svg>\r\n\r\n);\r\n\r\nexport default CloseIcon;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateSearchFilter } from '../../actions/contractActions';\r\nimport propTypes from 'prop-types';\r\nimport SearchIcon from '../Icons/SearchIcon';\r\nimport CloseIcon from '../Icons/CloseIcon';\r\n\r\nconst SearchBar = (props) => {\r\n\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n  const handleSearchInput = (e) => {\r\n    setFormValue(e.target.value);\r\n    if (e.target.value.length > 2) {\r\n      // props.setSearchFilter(e.target.value);\r\n      props.updateSearchFilter(e.target.value);\r\n    } else {\r\n      // props.setSearchFilter('');\r\n      props.updateSearchFilter('');\r\n\r\n    }\r\n  }\r\n\r\n  const handleCloseClick = () => {\r\n    // props.setSearchFilter('');\r\n    props.updateSearchFilter('');\r\n    setFormValue('');\r\n  }\r\n\r\n  const serveCloseIcon = () => {\r\n    if (props.contracts.searchFilter.length > 0) {\r\n      return <div className=\"clear-search-bar\" onClick={() => handleCloseClick()}><CloseIcon /></div>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"box-white\">\r\n      <div className=\"search-container\">\r\n        <SearchIcon />\r\n        <input\r\n          type=\"text\"\r\n          id=\"search\"\r\n          name=\"search\"\r\n          placeholder=\"Search\"\r\n          value={formValue}\r\n          onChange={(e) => handleSearchInput(e)}\r\n        />\r\n        {serveCloseIcon()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  updateSearchFilter: propTypes.func.isRequired,\r\n  contracts: propTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateSearchFilter })(SearchBar);","import React from 'react';\r\n\r\nconst ListIcon = ({\r\n  style = {  },\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n<svg \r\n  xmlns=\"http://www.w3.org/2000/svg\" \r\n  width=\"24\" \r\n  height=\"24\" \r\n  viewBox=\"0 0 24 24\" \r\n  fill=\"none\" \r\n  stroke=\"currentColor\" \r\n  strokeWidth=\"2\" \r\n  strokeLinecap=\"round\" \r\n  strokeLinejoin=\"round\" \r\n  className=\"feather feather-list\"\r\n>\r\n  <line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\r\n  <line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line>\r\n  <line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line>\r\n  <line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line>\r\n  <line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line>\r\n  <line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line>\r\n</svg>\r\n\r\n);\r\n\r\nexport default ListIcon;","import React from 'react';\r\n\r\nconst FileIcon = ({\r\n  style = {  },\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n<svg \r\n  xmlns=\"http://www.w3.org/2000/svg\" \r\n  width={width}\r\n  height={width} \r\n  viewBox=\"0 0 24 24\" \r\n  fill=\"none\" \r\n  stroke=\"currentColor\" \r\n  strokeWidth=\"2\" \r\n  strokeLinecap=\"round\" \r\n  strokeLinejoin=\"round\" \r\n  className=\"feather feather-file\"\r\n>\r\n  <path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path>\r\n  <polyline points=\"13 2 13 9 20 9\"></polyline>\r\n</svg>\r\n\r\n);\r\n\r\nexport default FileIcon;","import React from 'react';\r\n\r\nconst ChevronsDownIcon = ({\r\n  style = {  },\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n<svg \r\n  xmlns=\"http://www.w3.org/2000/svg\" \r\n  width=\"18\" \r\n  height=\"18\" \r\n  viewBox=\"0 0 24 24\" \r\n  fill=\"none\" \r\n  stroke=\"currentColor\" \r\n  strokeWidth=\"2\" \r\n  strokeLinecap=\"round\" \r\n  strokeLinejoin=\"round\" \r\n  className=\"feather feather-chevrons-down\"\r\n>\r\n  <polyline points=\"7 13 12 18 17 13\"></polyline>\r\n  <polyline points=\"7 6 12 11 17 6\"></polyline>\r\n</svg>\r\n\r\n\r\n\r\n);\r\n\r\nexport default ChevronsDownIcon;","import React from 'react';\r\n\r\nconst ArrowUpCircleIcon = ({\r\n  style = {  },\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n\r\n<svg \r\n  xmlns=\"http://www.w3.org/2000/svg\" \r\n  width=\"24\" \r\n  height=\"24\" \r\n  viewBox=\"0 0 24 24\" \r\n  fill=\"none\" \r\n  stroke=\"currentColor\" \r\n  strokeWidth=\"2\" \r\n  strokeLinecap=\"round\" \r\n  strokeLinejoin=\"round\" \r\n  className=\"feather feather-arrow-up-circle\"\r\n>\r\n  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n  <polyline points=\"16 12 12 8 8 12\"></polyline>\r\n  <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"8\"></line>\r\n</svg>\r\n\r\n);\r\n\r\nexport default ArrowUpCircleIcon;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { filterContracts, updateListFilter } from '../../actions/contractActions';\r\nimport propTypes from 'prop-types';\r\nimport ListIcon from '../Icons/ListIcon';\r\nimport FileIcon from '../Icons/FileIcon';\r\nimport ChevronsDownIcon from '../Icons/ChevronsDownIcon'\r\nimport ArrowUpCircleIcon from '../Icons/ArrowUpCircleIcon';\r\nimport numbersWithCommas from '../../helpers/numberWithCommas';\r\n\r\nconst ContractList = (props) => {\r\n\r\n  const [loadedAmount, setLoadedAmount] = useState(20);\r\n\r\n  useEffect(() => {\r\n\r\n    props.filterContracts(props.contracts.list, props.contracts.listFilter, props.contracts.searchFilter);\r\n\r\n  }, [props.filterContracts, props.contracts.listFilter, props.contracts.searchFilter, loadedAmount]);\r\n\r\n\r\n  const serveFilterButtons = (filter) => {\r\n    return (\r\n      <div className=\"box-filters\">\r\n        <div className={\"btn \" + (filter === 'all' ? 'btn-active' : 'btn-unactive')} onClick={() => props.updateListFilter('all')}>Show All</div>\r\n        <div className={\"btn \" + (filter === 'financial' ? 'btn-active' : 'btn-unactive')} onClick={() => props.updateListFilter('financial')}>Financial Only</div>\r\n        <div className={\"btn \" + (filter === 'disaggregated' ? 'btn-active' : 'btn-unactive')} onClick={() => props.updateListFilter('disaggregated')}>Disaggregated Only</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const serveChangeData = (data) => {\r\n    if (data > 0) {\r\n      return <span className='data-positive'>+{numbersWithCommas(data)}</span>;\r\n    } else if (data < 0) {\r\n      return <span className='data-negative'>{numbersWithCommas(data)}</span>;\r\n    } else {\r\n      return <span>0</span>\r\n    }\r\n  }\r\n\r\n  const serveList = (list) => {\r\n    const trimmedList = list.slice(0, loadedAmount - 1);\r\n\r\n    const formattedList = trimmedList.map(item => {\r\n      return (\r\n        <Link to={`/contract/${item.category}/${item.slug}`} key={item._id}>\r\n          <li className=\"contract-list-item\">\r\n            <div className=\"contract-list-item-header\">\r\n              <FileIcon width={14} />\r\n              <h3>{item.name}</h3>\r\n            </div>\r\n            <div className=\"contract-list-item-data\">\r\n              <span>{new Date(item.lastUpdate.date).toLocaleString(\"en-GB\", { year: 'numeric', month: 'short', day: 'numeric' })}</span>\r\n              <span>{item.lastUpdate.traders}</span>\r\n              {serveChangeData(item.lastUpdate.changeLong)}\r\n              {serveChangeData(item.lastUpdate.changeShort)}\r\n            </div>\r\n          </li>\r\n        </Link>\r\n      );\r\n    });\r\n    return formattedList;\r\n  }\r\n\r\n  const serveLoadMore = () => {\r\n    if (loadedAmount < props.contracts.filteredList.length) {\r\n      // if(loadedAmount<filteredContractList.length){\r\n      return (\r\n        <div className=\"load-more-btn\" onClick={() => handleLoadMore()}>\r\n          <ChevronsDownIcon />\r\n          <span>Load More</span>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const handleLoadMore = () => {\r\n    if (loadedAmount < props.contracts.filteredList.length) {\r\n      setLoadedAmount(loadedAmount + 20);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"box-white column-layout\">\r\n      <div className=\"box-header\">\r\n        <div className=\"box-title\">\r\n          <ListIcon />\r\n          <h2>Found Contracts</h2>\r\n        </div>\r\n\r\n        {serveFilterButtons(props.contracts.listFilter)}\r\n\r\n      </div>\r\n      <ul className=\"contract-list\">\r\n\r\n        <li className=\"contract-list-item\">\r\n          <div className=\"contract-list-item-header\">\r\n            <FileIcon width={14} />\r\n            <h3 title=\"Contract Name\">Contract Name</h3>\r\n          </div>\r\n          <div className=\"contract-list-item-data contract-list-item-data-header\">\r\n            <span title=\"Last Date Update\">Last Update</span>\r\n            <span title=\"Total Traders\">Traders</span>\r\n            <span title=\"Total Change Long Positions (Reportable Traders Only)\">Change Long</span>\r\n            <span title=\"Total Change Short Positions (Reportable Traders Only)\">Change Short</span></div>\r\n        </li>\r\n        {serveList(props.contracts.filteredList)}\r\n      </ul>\r\n\r\n      <div className=\"load-more-container\">\r\n        {serveLoadMore()}\r\n      </div>\r\n\r\n      <div className=\"box-footer\">\r\n        <a href=\"#top\" title=\"To Top\"><ArrowUpCircleIcon /></a>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nContractList.propTypes = {\r\n  filterContracts: propTypes.func.isRequired,\r\n  updateListFilter: propTypes.func.isRequired,\r\n  contracts: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { filterContracts, updateListFilter }\r\n)(ContractList);","import React, { useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { connect } from 'react-redux';\r\nimport { getContracts, setLoading } from '../../actions/contractActions';\r\nimport propTypes from 'prop-types';\r\nimport SearchBar from './SearchBar';\r\nimport ContractList from './ContractList';\r\n\r\nconst Main = (props) => {\r\n\r\n  useEffect(() => {\r\n    props.setLoading(true);\r\n    props.getContracts();\r\n  }, [props.getContracts]);\r\n\r\n  const serveContent = () => {\r\n    if (props.contracts.loading === false) {\r\n      return (\r\n        <div>\r\n          <Helmet>\r\n            <title>Commitments of Traders - tradersCMT</title>\r\n            <meta name=\"description\" content={`Commitments of Traders meta desc goes here.`} />\r\n          </Helmet>\r\n          <main>\r\n            <section>\r\n              <SearchBar />\r\n              <ContractList />\r\n            </section>\r\n          </main>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <main>\r\n          <section>\r\n            <div className=\"spinner\">\r\n              <div className=\"rect1\"></div>\r\n              <div className=\"rect2\"></div>\r\n              <div className=\"rect3\"></div>\r\n              <div className=\"rect4\"></div>\r\n              <div className=\"rect5\"></div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      );\r\n    }\r\n  }\r\n  return serveContent();\r\n}\r\n\r\nMain.propTypes = {\r\n  getContracts: propTypes.func.isRequired,\r\n  contracts: propTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts\r\n});\r\n\r\nexport default connect(mapStateToProps, { getContracts, setLoading })(Main);","import React from 'react';\r\n\r\nconst FileTextIcon = ({\r\n  style = {},\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      className=\"feather feather-file-text\"\r\n    >\r\n      <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n      <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n      <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\r\n      <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\r\n      <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n    </svg>\r\n\r\n  );\r\n\r\nexport default FileTextIcon;","import React, { useState, useEffect } from 'react';\r\nimport numbersWithCommas from '../../helpers/numberWithCommas';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst DoughtnutChart = (props) => {\r\n\r\n  useEffect(() => {\r\n    setTitle(props.title)\r\n  }, [props.title]);\r\n\r\n  const [title, setTitle] = useState('');\r\n\r\n  const options = {\r\n    circumference: 1 * Math.PI,\r\n    rotation: 1 * Math.PI,\r\n    cutoutPercentage: 60,\r\n    legend: {\r\n      display: false\r\n    }\r\n  };\r\n\r\n  const data = {\r\n    labels: [\"Long\", \"Short\", \"Spreading\"],\r\n    datasets: [{\r\n      backgroundColor: [\"#37517e\", \"#fcb22d\", \"#00a4df\"],\r\n      data: props.week.positions\r\n    }]\r\n  };\r\n\r\n  const percentage = (total, change) => {\r\n    const value = ((change * 100) / total).toFixed(2)\r\n    if (value > 0) {\r\n      return (<span className=\"data-positive\">+{value}%</span>);\r\n    } else if (value < 0) {\r\n      return (<span className=\"data-negative\">{value}%</span>);\r\n    } else if (value === 0) {\r\n      return (<span>{value}%</span>);\r\n    } else {\r\n      return (<span>0.00%</span>);\r\n    }\r\n  }\r\n\r\n  const setDataColor = (data) => {\r\n    if (data > 0) {\r\n      return (<span className=\"data-positive\">+{numbersWithCommas(data)}</span>)\r\n    } else if (data < 0) {\r\n      return (<span className=\"data-negative\">{numbersWithCommas(data)}</span>)\r\n    } else {\r\n      return (<span>{data}</span>)\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <li className=\"trader-card\">\r\n      <div className=\"trader-chart\">\r\n        <Doughnut data={data} options={options} />\r\n      </div>\r\n      <h3>{title}</h3>\r\n      <div className=\"trader-data-section\">\r\n        <h4>Positions</h4>\r\n        <ul>\r\n          <li><span>Long</span> <span>{numbersWithCommas(props.week.positions[0])}</span></li>\r\n          <li><span>Short</span> <span>{numbersWithCommas(props.week.positions[1])}</span></li>\r\n          <li><span>Spreading</span> <span>{numbersWithCommas(props.week.positions[2])}</span></li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"trader-data-section\">\r\n        <h4>Change</h4>\r\n        <ul>\r\n          <li>\r\n            <span>Long</span>\r\n            <span>{setDataColor(props.week.changes[0])} ({percentage(props.week.positions[0], props.week.changes[0])})</span>\r\n          </li>\r\n          <li>\r\n            <span>Short</span>\r\n            <span>{setDataColor(props.week.changes[1])} ({percentage(props.week.positions[1], props.week.changes[1])})</span>\r\n          </li>\r\n          <li>\r\n            <span>Spreading</span>\r\n            <span>{setDataColor(props.week.changes[2])} ({percentage(props.week.positions[2], props.week.changes[2])})</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"trader-data-section\">\r\n        <h4>Open Interest</h4>\r\n        <ul>\r\n          <li><span>Long</span> <span>{props.week.openInterest[0]}%</span></li>\r\n          <li><span>Short</span> <span>{props.week.openInterest[1]}%</span></li>\r\n          <li><span>Spreading</span> <span>{props.week.openInterest[2]}%</span></li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"trader-data-section\">\r\n        <h4>Traders</h4>\r\n        <ul>\r\n          <li><span>Long</span> <span>{props.week.traders[0]}</span></li>\r\n          <li><span>Short</span> <span>{props.week.traders[1]}</span></li>\r\n          <li><span>Spreading</span> <span>{props.week.traders[2]}</span></li>\r\n        </ul>\r\n      </div>\r\n\r\n    </li>\r\n\r\n\r\n  );\r\n}\r\n\r\nDoughtnutChart.propTypes = {\r\n  contracts: propTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts\r\n});\r\n\r\nexport default connect(mapStateToProps)(DoughtnutChart);","import dateFormater from './dateFormatter';\r\nconst moment = require('moment');\r\n\r\nconst getWeekRange = (rawDate) => { //date in format YYYY/MM/DD\r\n  if(rawDate){\r\n    const date = dateFormater(rawDate,'long')\r\n    const startOfWeek = moment(date).startOf('isoWeek').toDate();\r\n    const endOfWeek = moment(date).endOf('isoWeek').toDate();\r\n    const weekRange = moment(startOfWeek).format(\"MMMM Do YYYY\") + ' - ' + moment(endOfWeek).format(\"MMMM Do YYYY\");\r\n    return weekRange;\r\n  } else {\r\n    return 'Loading...'\r\n  }\r\n\r\n}\r\n\r\nexport default getWeekRange;","import React from 'react';\r\n\r\nconst CalendarIcon = ({\r\n  style = {},\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      className=\"feather feather-calendar\"\r\n    >\r\n\r\n      <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\r\n      <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\r\n      <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\r\n      <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\r\n\r\n    </svg>\r\n\r\n  );\r\n\r\nexport default CalendarIcon;","import React from 'react';\r\n\r\nconst ChevronsLeftIcon = ({\r\n  style = {},\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"18\"\r\n      height=\"18\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      className=\"feather feather-chevrons-left\"\r\n    >\r\n      <polyline points=\"11 17 6 12 11 7\"></polyline>\r\n      <polyline points=\"18 17 13 12 18 7\"></polyline>\r\n    </svg>\r\n\r\n\r\n\r\n  );\r\n\r\nexport default ChevronsLeftIcon;","import React from 'react';\r\n\r\nconst ChevronsRightIcon = ({\r\n  style = {},\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"18\"\r\n      height=\"18\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      className=\"feather feather-chevrons-right\"\r\n    >\r\n\r\n      <polyline points=\"13 17 18 12 13 7\"></polyline>\r\n      <polyline points=\"6 17 11 12 6 7\"></polyline>\r\n    </svg>\r\n\r\n\r\n\r\n  );\r\n\r\nexport default ChevronsRightIcon;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setActiveWeek } from '../../actions/contractActions';\r\nimport propTypes from 'prop-types';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport getWeekRange from '../../helpers/getWeekRange';\r\nimport CalendarIcon from '../Icons/CalendarIcon';\r\nimport ChevronsLeftIcon from '../Icons/ChevronsLeftIcon';\r\nimport ChevronsRightIcon from '../Icons/ChevronsRightIcon';\r\n\r\nconst Weekly = (props) => {\r\n  const activeWeek = props.contracts.selectedContractActiveWeek;\r\n  const activeWeekIndex = props.contracts.selectedContractActiveWeek.weekIndex;\r\n  const mostRecentWeekIndex = props.contracts.selectedContractPositions.length - 1;\r\n  const category = props.contracts.selectedContractActiveWeek.category;\r\n  const data = props.contracts.selectedContractPositions;\r\n\r\n  const serveNavigationButtons = () => {\r\n    return (\r\n      <div className=\"box-filters\">\r\n        <div className={\"btn \" + (activeWeekIndex <= 0 ? 'btn-deactivated' : 'btn-unactive')} onClick={() => handleNavigationClick('backward')}><ChevronsLeftIcon />Backward</div>\r\n        <div className={\"btn \" + (activeWeekIndex >= mostRecentWeekIndex ? 'btn-deactivated' : 'btn-unactive')} onClick={() => handleNavigationClick('forward')}>Forward<ChevronsRightIcon /></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleNavigationClick = (direction) => {\r\n    if (direction === 'forward' && activeWeekIndex < mostRecentWeekIndex) {\r\n      props.setActiveWeek(category, data, activeWeekIndex + 1);\r\n    } else if (direction === 'backward' && activeWeekIndex > 0) {\r\n      props.setActiveWeek(category, data, activeWeekIndex - 1);\r\n    }\r\n  }\r\n\r\n  const serveDoughnuts = (category) => {\r\n    if (category === 'financial') {\r\n      return (\r\n        <ul className=\"trader-container\">\r\n          <DoughnutChart title={'Dealer Intermediary'} week={activeWeek.dealer} />\r\n          <DoughnutChart title={'Asset Mger / Institutional'} week={activeWeek.assetMgr} />\r\n          <DoughnutChart title={'Leveraged Funds'} week={activeWeek.levFunds} />\r\n          <DoughnutChart title={'Other Reportables'} week={activeWeek.otherRep} />\r\n          <DoughnutChart title={'Nonreportable Positions'} week={activeWeek.nonRep} />\r\n        </ul>\r\n      );\r\n    } else if (category === 'disaggregated') {\r\n      return (\r\n        <ul className=\"trader-container\">\r\n          <DoughnutChart title={'Prod / Merch / Proc / User'} week={activeWeek.prodMerc} />\r\n          <DoughnutChart title={'Swap Dealers'} week={activeWeek.swap} />\r\n          <DoughnutChart title={'Managed Money'} week={activeWeek.mMoney} />\r\n          <DoughnutChart title={'Other Reportables'} week={activeWeek.otherRep} />\r\n          <DoughnutChart title={'Nonreportable Positions'} week={activeWeek.nonRep} />\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n\r\n    <section>\r\n      <div className=\"box-white column-layout\">\r\n        <div className=\"box-header\">\r\n          <div className=\"box-title\">\r\n            <CalendarIcon />\r\n            <h2>Weekly Report: {getWeekRange(activeWeek.date)}</h2>\r\n          </div>\r\n          {serveNavigationButtons()}\r\n        </div>\r\n        {serveDoughnuts(category)}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nWeekly.propTypes = {\r\n  setActiveWeek: propTypes.func.isRequired,\r\n  contracts: propTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts\r\n});\r\n\r\nexport default connect(mapStateToProps, { setActiveWeek })(Weekly);","import React, {useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport dateFormatter from '../../../helpers/dateFormatter';\r\n\r\nconst VolumeFinancial = (props) => {\r\n  const [data, setData] = useState({});\r\n  const options = {\r\n    title: {\r\n      display: false,\r\n      text: 'VOLUME',\r\n      fontSize: 16,\r\n    },\r\n    legend: {\r\n      display: false\r\n    },\r\n    hover: {\r\n      onHover: function(e) {\r\n         var point = this.getElementAtEvent(e);\r\n         if (point.length) e.target.style.cursor = 'pointer';\r\n         else e.target.style.cursor = 'default';\r\n      }\r\n    },\r\n    scales: {\r\n      yAxes: [{ \r\n        stacked: true,\r\n        ticks: { fontSize:11, fontStyle: 'bold' },\r\n      }],\r\n      xAxes: [{\r\n          stacked: true,\r\n          ticks: { maxRotation: 45, minRotation: 45, fontSize:10, fontStyle: 'bold' },\r\n        }]\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n\r\n    const fillPositions = (data, timeRange) => {\r\n      let newData = {\r\n        labels: [],\r\n        datasets: [\r\n          { label: \"Long\", backgroundColor:  \"#37517e\", data: [] },\r\n          { label: \"Short\", backgroundColor:  \"#fcb22d\", data: [] },\r\n          { label: \"Spreading\", backgroundColor:  \"#00a4df\", data: [] },\r\n        ]\r\n      };\r\n  \r\n      const rangedData = data.slice(-timeRange+1);\r\n      rangedData.forEach(position => {\r\n        newData.labels.push(dateFormatter(position.As_of_Date_In_Form_YYMMDD, 'long'));\r\n        let [longTotal, shortTotal, spreadTotal] = [0, 0, 0];\r\n  \r\n        if(props.classDealer){\r\n          longTotal += position.Dealer_Positions_Long_All;\r\n          shortTotal += position.Dealer_Positions_Short_All;\r\n          spreadTotal += position.Dealer_Positions_Spread_All;\r\n        }\r\n        if(props.classAssetMgr){\r\n          longTotal += position.Asset_Mgr_Positions_Long_All;\r\n          shortTotal += position.Asset_Mgr_Positions_Short_All;\r\n          spreadTotal += position.Asset_Mgr_Positions_Spread_All;\r\n        }\r\n        if(props.classLevFunds){\r\n          longTotal += position.Lev_Money_Positions_Long_All;\r\n          shortTotal += position.Lev_Money_Positions_Short_All;\r\n          spreadTotal += position.Lev_Money_Positions_Spread_All;\r\n        }\r\n        if(props.classOtherRep){\r\n          longTotal += position.Other_Rept_Positions_Long_All;\r\n          shortTotal += position.Other_Rept_Positions_Short_All;\r\n          spreadTotal += position.Other_Rept_Positions_Spread_All;\r\n        }\r\n        if(props.classNonRep){\r\n          longTotal += position.NonRept_Positions_Long_All;\r\n          shortTotal += position.NonRept_Positions_Short_All;\r\n        }\r\n  \r\n        newData.datasets[0].data.push(longTotal);\r\n        newData.datasets[1].data.push(shortTotal);\r\n        newData.datasets[2].data.push(spreadTotal);\r\n  \r\n      });\r\n      setData(newData);\r\n    };\r\n\r\n    fillPositions(props.contracts.selectedContractPositions, props.timeRange);\r\n  },[props]);\r\n\r\n  const handleBarClick = (elems) => {\r\n    if(elems.length>0){\r\n      const rawDate = elems[0]._model.label;\r\n      props.handleWeekClick(rawDate);\r\n      window.scrollTo(0,0); \r\n    }\r\n  };\r\n\r\n  return(\r\n      <Bar \r\n        data={data} \r\n        height={50}\r\n        options={options} \r\n        getElementAtEvent={(elems) => handleBarClick(elems)}\r\n      />\r\n  );\r\n};\r\n\r\nVolumeFinancial.propTypes = {contracts: propTypes.object.isRequired}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts\r\n});\r\n\r\nexport default connect(mapStateToProps)(VolumeFinancial);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { Line } from 'react-chartjs-2';\r\nimport dateFormatter from '../../../helpers/dateFormatter';\r\n\r\nconst PositionsFinancial = (props) => {\r\n  const [data, setData] = useState({});\r\n  const options = {\r\n    title: {\r\n      display: false,\r\n      text: 'POSITIONS',\r\n      fontSize: 16\r\n    },\r\n    hover: {\r\n      onHover: function (e) {\r\n        var point = this.getElementAtEvent(e);\r\n        if (point.length) e.target.style.cursor = 'pointer';\r\n        else e.target.style.cursor = 'default';\r\n      }\r\n    },\r\n    scales: {\r\n      yAxes: [{\r\n        stacked: false,\r\n        ticks: { fontSize: 11, fontStyle: 'bold' },\r\n      }],\r\n      xAxes: [{\r\n        stacked: true,\r\n        ticks: { maxRotation: 45, minRotation: 45, fontSize: 10, fontStyle: 'bold' },\r\n      }],\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    const fillPositions = (data, timeRange) => {\r\n      let newData = {\r\n        labels: [],\r\n        datasets: [\r\n          { label: \"Long\", lineTension: 0, borderWidth: 1.5, borderColor: \"#37517e\", pointBackgroundColor: \"#37517e\", pointRadius: 0.2, backgroundColor: 'rgba(0, 0, 0, 0.0)', data: [] },\r\n          { label: \"Short\", lineTension: 0, borderWidth: 1.5, borderColor: \"#fcb22d\", pointBackgroundColor: \"#fcb22d\", pointRadius: 0.2, backgroundColor: 'rgba(0, 0, 0, 0.0)', data: [] },\r\n          { label: \"Spreading\", lineTension: 0, borderWidth: 1.5, borderColor: \"#00a4df\", pointBackgroundColor: \"#00a4df\", pointRadius: 0.2, backgroundColor: 'rgba(0, 0, 0, 0.0)', data: [] },\r\n        ]\r\n      };\r\n\r\n      const rangedData = data.slice(-timeRange + 1);\r\n\r\n      rangedData.forEach(position => {\r\n        newData.labels.push(dateFormatter(position.As_of_Date_In_Form_YYMMDD, 'long'))\r\n        let [longTotal, shortTotal, spreadTotal] = [0, 0, 0];\r\n\r\n        if (props.classDealer) {\r\n          longTotal += position.Dealer_Positions_Long_All;\r\n          shortTotal += position.Dealer_Positions_Short_All;\r\n          spreadTotal += position.Dealer_Positions_Spread_All;\r\n        }\r\n        if (props.classAssetMgr) {\r\n          longTotal += position.Asset_Mgr_Positions_Long_All;\r\n          shortTotal += position.Asset_Mgr_Positions_Short_All;\r\n          spreadTotal += position.Asset_Mgr_Positions_Spread_All;\r\n        }\r\n        if (props.classLevFunds) {\r\n          longTotal += position.Lev_Money_Positions_Long_All;\r\n          shortTotal += position.Lev_Money_Positions_Short_All;\r\n          spreadTotal += position.Lev_Money_Positions_Spread_All;\r\n        }\r\n        if (props.classOtherRep) {\r\n          longTotal += position.Other_Rept_Positions_Long_All;\r\n          shortTotal += position.Other_Rept_Positions_Short_All;\r\n          spreadTotal += position.Other_Rept_Positions_Spread_All;\r\n        }\r\n        if (props.classNonRep) {\r\n          longTotal += position.NonRept_Positions_Long_All;\r\n          shortTotal += position.NonRept_Positions_Short_All;\r\n        }\r\n\r\n        newData.datasets[0].data.push(longTotal);\r\n        newData.datasets[1].data.push(shortTotal);\r\n        newData.datasets[2].data.push(spreadTotal);\r\n\r\n      });\r\n      setData(newData);\r\n    }\r\n\r\n    fillPositions(props.contracts.selectedContractPositions, props.timeRange);\r\n  }, [props]);\r\n\r\n\r\n  const handleLineClick = (elems) => {\r\n    if (elems.length > 0) {\r\n      const elemIndex = elems[0]._index;\r\n      const rawDate = elems[0]._xScale._ticks[elemIndex].value;\r\n      props.handleWeekClick(rawDate);\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Line\r\n      data={data}\r\n      options={options}\r\n      height={100}\r\n      getElementAtEvent={(elems) => handleLineClick(elems)}\r\n    />\r\n  );\r\n}\r\n\r\nPositionsFinancial.propTypes = { contracts: propTypes.object.isRequired }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts\r\n});\r\n\r\nexport default connect(mapStateToProps)(PositionsFinancial);","import React from 'react';\r\n\r\nconst TrendUpIcon = ({\r\n  style = {},\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      className=\"feather feather-trending-up\"\r\n    >\r\n      <polyline points=\"23 6 13.5 15.5 8.5 10.5 1 18\"></polyline>\r\n      <polyline points=\"17 6 23 6 23 12\"></polyline>\r\n    </svg>\r\n\r\n  );\r\n\r\nexport default TrendUpIcon;","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport VolumeFinancial from './VolumeFinancial';\r\nimport PositionsFinancial from './PositionsFinancial';\r\nimport TrendUpIcon from '../../Icons/TrendUpIcon';\r\nimport ArrowUpCircleIcon from '../../Icons/ArrowUpCircleIcon';\r\n\r\nconst HistoricalFinancial = (props) => {\r\n\r\n  const [timeRange, setTimeRange] = useState(104); //in weeks\r\n  const [classDealer, setClassDealer] = useState(true);\r\n  const [classAssetMgr, setClassAssetMgr] = useState(true);\r\n  const [classLevFunds, setClassLevFunds] = useState(true);\r\n  const [classOtherRep, setClassOtherRep] = useState(false);\r\n  const [classNonRep, setClassNonRep] = useState(false);\r\n\r\n  const handleCheck = (checkId) => {\r\n    switch(checkId) {\r\n      case 'dealer':\r\n        setClassDealer(!classDealer);\r\n        break;\r\n      case 'assetMgr':\r\n        setClassAssetMgr(!classAssetMgr);\r\n        break;\r\n      case 'levFunds':\r\n        setClassLevFunds(!classLevFunds);\r\n        break;\r\n      case 'otherRep':\r\n        setClassOtherRep(!classOtherRep);\r\n        break;\r\n      case 'nonRep':\r\n        setClassNonRep(!classNonRep);\r\n        break;\r\n      default:\r\n        break;\r\n    }  \r\n  }\r\n\r\n  const serveTimeRangeButtons = () => {\r\n    \r\n    return(\r\n      <div className=\"box-filters\">\r\n        <div className={\"btn \" + (timeRange === 52 ? 'btn-active' : 'btn-unactive')} onClick={()=>setTimeRange(52)}>1Y</div>\r\n        <div className={\"btn \" + (timeRange === 104 ? 'btn-active' : 'btn-unactive')}   onClick={()=>setTimeRange(104)}>2Y</div>\r\n        <div className={\"btn \" + (timeRange === 156 ? 'btn-active' : 'btn-unactive')} onClick={()=>setTimeRange(156)}>3Y</div>\r\n        <div className={\"btn \" + (timeRange === 208 ? 'btn-active' : 'btn-unactive')} onClick={()=>setTimeRange(208)}>4Y</div>\r\n        <div className={\"btn \" + (timeRange === 260 ? 'btn-active' : 'btn-unactive')} onClick={()=>setTimeRange(260)}>5Y</div>\r\n        <div className={\"btn \" + (timeRange === props.contracts.selectedContractPositions.length ? 'btn-active' : 'btn-unactive')} onClick={()=>setTimeRange(props.contracts.selectedContractPositions.length)}>All</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return(\r\n    <section>\r\n      <div className=\"box-white column-layout\">\r\n        <div className=\"box-header\">\r\n\r\n          <div className=\"box-title\">\r\n            <TrendUpIcon/>\r\n            <h2>Historical Data</h2>\r\n          </div>\r\n          {serveTimeRangeButtons()}\r\n        </div>\r\n\r\n        <ul className=\"trader-filter\">\r\n          <div className=\"trader-filter-option\">\r\n            <input type=\"checkbox\" id=\"dealer\" defaultChecked={classDealer} onChange={()=>handleCheck('dealer')}/>\r\n            <label htmlFor=\"dealer\">Dealer Intermediary</label>\r\n          </div>\r\n          <div className=\"trader-filter-option\">\r\n            <input type=\"checkbox\" id=\"assetMgr\" defaultChecked={classAssetMgr} onChange={()=>handleCheck('assetMgr')}/>\r\n            <label htmlFor=\"assetMgr\">Asset Manager / Institutional</label>\r\n          </div>\r\n          <div className=\"trader-filter-option\">\r\n            <input type=\"checkbox\" id=\"levFunds\" defaultChecked={classLevFunds} onChange={()=>handleCheck('levFunds')}/>\r\n            <label htmlFor=\"levFunds\">Leveraged Funds</label>\r\n          </div>\r\n          <div className=\"trader-filter-option\">\r\n            <input type=\"checkbox\" id=\"otherRep\" defaultChecked={classOtherRep} onChange={()=>handleCheck('otherRep')}/>\r\n            <label htmlFor=\"otherRep\">Other Reportables</label>\r\n          </div>\r\n          <div className=\"trader-filter-option\">\r\n            <input type=\"checkbox\" id=\"nonRep\" defaultChecked={classNonRep} onChange={()=>handleCheck('nonRep')}/>\r\n            <label htmlFor=\"nonRep\">Nonreportable Positions</label>\r\n          </div>\r\n        </ul>\r\n\r\n        <div className=\"historical-data-section\">\r\n          <h3>Positions</h3>\r\n          <div className=\"historical-data-chart chart-md\">\r\n            <PositionsFinancial \r\n              timeRange={timeRange} \r\n              handleWeekClick={props.handleWeekClick}\r\n              classDealer={classDealer}\r\n              classAssetMgr={classAssetMgr}\r\n              classLevFunds={classLevFunds}\r\n              classOtherRep={classOtherRep}\r\n              classNonRep={classNonRep}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"historical-data-section \">\r\n          <h3>Volume</h3>\r\n          <div className=\"historical-data-chart chart-sm\">\r\n            <VolumeFinancial \r\n              timeRange={timeRange} \r\n              handleWeekClick={props.handleWeekClick}\r\n              classDealer={classDealer}\r\n              classAssetMgr={classAssetMgr}\r\n              classLevFunds={classLevFunds}\r\n              classOtherRep={classOtherRep}\r\n              classNonRep={classNonRep}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <a href=\"#top\"><ArrowUpCircleIcon /></a>\r\n        </div>\r\n        \r\n\r\n      </div>\r\n    </section>\r\n\r\n  );\r\n}\r\n\r\nHistoricalFinancial.propTypes = {contracts: propTypes.object.isRequired}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts\r\n});\r\n\r\nexport default connect(mapStateToProps)(HistoricalFinancial);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport dateFormatter from '../../../helpers/dateFormatter';\r\n\r\n\r\nconst VolumeDisaggregated = (props) => {\r\n  const [data, setData] = useState({});\r\n  const options = {\r\n    title: {\r\n      display: false,\r\n      text: 'VOLUME',\r\n      fontSize: 16,\r\n    },\r\n    legend: {\r\n      display: false\r\n    },\r\n    hover: {\r\n      onHover: function (e) {\r\n        var point = this.getElementAtEvent(e);\r\n        if (point.length) e.target.style.cursor = 'pointer';\r\n        else e.target.style.cursor = 'default';\r\n      }\r\n    },\r\n    scales: {\r\n      yAxes: [{\r\n        stacked: true,\r\n        ticks: { fontSize: 11, fontStyle: 'bold' },\r\n      }],\r\n      xAxes: [{\r\n        stacked: true,\r\n        ticks: { maxRotation: 45, minRotation: 45, fontSize: 10, fontStyle: 'bold' },\r\n      }]\r\n    },\r\n    onClick: {}\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    const fillPositions = (data, timeRange) => {\r\n      let newData = {\r\n        labels: [],\r\n        datasets: [\r\n          { label: \"Long\", backgroundColor: \"#37517e\", data: [] },\r\n          { label: \"Short\", backgroundColor: \"#fcb22d\", data: [] },\r\n          { label: \"Spreading\", backgroundColor: \"#00a4df\", data: [] },\r\n        ]\r\n      };\r\n\r\n      const rangedData = data.slice(-timeRange + 1);\r\n      rangedData.forEach(position => {\r\n        newData.labels.push(dateFormatter(position.As_of_Date_In_Form_YYMMDD, 'long'));\r\n        let [longTotal, shortTotal, spreadTotal] = [0, 0, 0];\r\n\r\n        if (props.classProdMerc) {\r\n          longTotal += position.Prod_Merc_Positions_Long_ALL;\r\n          shortTotal += position.Prod_Merc_Positions_Short_ALL;\r\n        }\r\n        if (props.classSwap) {\r\n          longTotal += position.Swap_Positions_Long_All;\r\n          shortTotal += position.Swap__Positions_Short_All;\r\n          spreadTotal += position.Swap__Positions_Spread_All;\r\n        }\r\n        if (props.classMMoney) {\r\n          longTotal += position.M_Money_Positions_Long_ALL;\r\n          shortTotal += position.M_Money_Positions_Short_ALL;\r\n          spreadTotal += position.M_Money_Positions_Spread_ALL;\r\n        }\r\n        if (props.classOtherRep) {\r\n          longTotal += position.Other_Rept_Positions_Long_ALL;\r\n          shortTotal += position.Other_Rept_Positions_Short_ALL;\r\n          spreadTotal += position.Other_Rept_Positions_Spread_ALL;\r\n        }\r\n        if (props.classNonRep) {\r\n          longTotal += position.NonRept_Positions_Long_All;\r\n          shortTotal += position.NonRept_Positions_Short_All;\r\n        }\r\n\r\n        newData.datasets[0].data.push(longTotal);\r\n        newData.datasets[1].data.push(shortTotal);\r\n        newData.datasets[2].data.push(spreadTotal);\r\n\r\n      });\r\n      setData(newData);\r\n    };\r\n\r\n    fillPositions(props.contracts.selectedContractPositions, props.timeRange);\r\n  }, [props]);\r\n\r\n  const handleBarClick = (elems) => {\r\n    if (elems.length > 0) {\r\n      const rawDate = elems[0]._model.label;\r\n      console.log(rawDate); //debug\r\n      props.handleWeekClick(rawDate);\r\n      window.scrollTo(0, 0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Bar\r\n      data={data}\r\n      height={50}\r\n      options={options}\r\n      getElementAtEvent={(elems) => handleBarClick(elems)}\r\n    />\r\n  );\r\n};\r\n\r\nVolumeDisaggregated.propTypes = { contracts: propTypes.object.isRequired }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts\r\n});\r\n\r\nexport default connect(mapStateToProps)(VolumeDisaggregated);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { Line } from 'react-chartjs-2';\r\nimport dateFormatter from '../../../helpers/dateFormatter';\r\n\r\nconst PositionsDisaggregated = (props) => {\r\n  const [data, setData] = useState({});\r\n  const options = {\r\n    title: {\r\n      display: false,\r\n      text: 'POSITIONS',\r\n      fontSize: 16\r\n    },\r\n    hover: {\r\n      onHover: function (e) {\r\n        var point = this.getElementAtEvent(e);\r\n        if (point.length) e.target.style.cursor = 'pointer';\r\n        else e.target.style.cursor = 'default';\r\n      }\r\n    },\r\n    scales: {\r\n      yAxes: [{\r\n        stacked: false,\r\n        ticks: { fontSize: 11, fontStyle: 'bold' },\r\n      }],\r\n      xAxes: [{\r\n        stacked: true,\r\n        ticks: { maxRotation: 45, minRotation: 45, fontSize: 10, fontStyle: 'bold' },\r\n      }],\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    const fillPositions = (data, timeRange) => {\r\n      let newData = {\r\n        labels: [],\r\n        datasets: [\r\n          { label: \"Long\", lineTension: 0, borderWidth: 1, borderColor: \"#37517e\", pointBackgroundColor: \"#37517e\", pointRadius: 1, backgroundColor: 'rgba(0, 0, 0, 0.0)', data: [] },\r\n          { label: \"Short\", lineTension: 0, borderWidth: 1, borderColor: \"#fcb22d\", pointBackgroundColor: \"#fcb22d\", pointRadius: 1, backgroundColor: 'rgba(0, 0, 0, 0.0)', data: [] },\r\n          { label: \"Spreading\", lineTension: 0, borderWidth: 1, borderColor: \"#00a4df\", pointBackgroundColor: \"#00a4df\", pointRadius: 1, backgroundColor: 'rgba(0, 0, 0, 0.0)', data: [] },\r\n        ]\r\n      };\r\n\r\n      const rangedData = data.slice(-timeRange + 1);\r\n\r\n      rangedData.forEach(position => {\r\n        newData.labels.push(dateFormatter(position.As_of_Date_In_Form_YYMMDD, 'long'))\r\n        let [longTotal, shortTotal, spreadTotal] = [0, 0, 0];\r\n\r\n        if (props.classProdMerc) {\r\n          longTotal += position.Prod_Merc_Positions_Long_ALL;\r\n          shortTotal += position.Prod_Merc_Positions_Short_ALL;\r\n        }\r\n        if (props.classSwap) {\r\n          longTotal += position.Swap_Positions_Long_All;\r\n          shortTotal += position.Swap__Positions_Short_All;\r\n          spreadTotal += position.Swap__Positions_Spread_All;\r\n        }\r\n        if (props.classMMoney) {\r\n          longTotal += position.M_Money_Positions_Long_ALL;\r\n          shortTotal += position.M_Money_Positions_Short_ALL;\r\n          spreadTotal += position.M_Money_Positions_Spread_ALL;\r\n        }\r\n        if (props.classOtherRep) {\r\n          longTotal += position.Other_Rept_Positions_Long_ALL;\r\n          shortTotal += position.Other_Rept_Positions_Short_ALL;\r\n          spreadTotal += position.Other_Rept_Positions_Spread_ALL;\r\n        }\r\n        if (props.classNonRep) {\r\n          longTotal += position.NonRept_Positions_Long_All;\r\n          shortTotal += position.NonRept_Positions_Short_All;\r\n        }\r\n\r\n        newData.datasets[0].data.push(longTotal);\r\n        newData.datasets[1].data.push(shortTotal);\r\n        newData.datasets[2].data.push(spreadTotal);\r\n\r\n      });\r\n      setData(newData);\r\n    }\r\n\r\n    fillPositions(props.contracts.selectedContractPositions, props.timeRange);\r\n  }, [props]);\r\n\r\n\r\n  const handleLineClick = (elems) => {\r\n    if (elems.length > 0) {\r\n      const elemIndex = elems[0]._index;\r\n      const rawDate = elems[0]._xScale._ticks[elemIndex].value;\r\n      props.handleWeekClick(rawDate);\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Line\r\n      data={data}\r\n      options={options}\r\n      height={100}\r\n      getElementAtEvent={(elems) => handleLineClick(elems)}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nPositionsDisaggregated.propTypes = { contracts: propTypes.object.isRequired }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts\r\n});\r\n\r\nexport default connect(mapStateToProps)(PositionsDisaggregated);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport VolumeDisaggregated from './VolumeDisaggregated';\r\nimport PositionsDisaggregated from './PositionsDisaggregated';\r\nimport TrendUpIcon from '../../Icons/TrendUpIcon';\r\nimport ArrowUpCircleIcon from '../../Icons/ArrowUpCircleIcon';\r\n\r\nconst HistoricalDisaggregated = (props) => {\r\n\r\n  const [timeRange, setTimeRange] = useState(104); //in weeks\r\n  const [classProdMerc, setClassProdMerc] = useState(true);\r\n  const [classSwap, setClassSwap] = useState(true);\r\n  const [classMMoney, setClassMMoney] = useState(true);\r\n  const [classOtherRep, setClassOtherRep] = useState(false);\r\n  const [classNonRep, setClassNonRep] = useState(false);\r\n\r\n  const handleCheck = (checkId) => {\r\n    switch (checkId) {\r\n      case 'prodMerc':\r\n        setClassProdMerc(!classProdMerc);\r\n        break;\r\n      case 'swap':\r\n        setClassSwap(!classSwap);\r\n        break;\r\n      case 'mMoney':\r\n        setClassMMoney(!classMMoney);\r\n        break;\r\n      case 'otherRep':\r\n        setClassOtherRep(!classOtherRep);\r\n        break;\r\n      case 'nonRep':\r\n        setClassNonRep(!classNonRep);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const serveTimeRangeButtons = () => {\r\n    return (\r\n      <div className=\"box-filters\">\r\n        <div className={\"btn \" + (timeRange === 52 ? 'btn-active' : 'btn-unactive')} onClick={() => setTimeRange(52)}>1Y</div>\r\n        <div className={\"btn \" + (timeRange === 104 ? 'btn-active' : 'btn-unactive')} onClick={() => setTimeRange(104)}>2Y</div>\r\n        <div className={\"btn \" + (timeRange === 156 ? 'btn-active' : 'btn-unactive')} onClick={() => setTimeRange(156)}>3Y</div>\r\n        <div className={\"btn \" + (timeRange === 208 ? 'btn-active' : 'btn-unactive')} onClick={() => setTimeRange(208)}>4Y</div>\r\n        <div className={\"btn \" + (timeRange === 260 ? 'btn-active' : 'btn-unactive')} onClick={() => setTimeRange(260)}>5Y</div>\r\n        <div className={\"btn \" + (timeRange === props.contracts.selectedContractPositions.length ? 'btn-active' : 'btn-unactive')} onClick={() => setTimeRange(props.contracts.selectedContractPositions.length)}>All</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n\r\n    <section>\r\n      <div className=\"box-white column-layout\">\r\n        <div className=\"box-header\">\r\n\r\n          <div className=\"box-title\">\r\n            <TrendUpIcon />\r\n            <h2>Historical Data</h2>\r\n          </div>\r\n\r\n          {serveTimeRangeButtons()}\r\n        </div>\r\n\r\n        <ul className=\"trader-filter\">\r\n          <div className=\"trader-filter-option\">\r\n            <input type=\"checkbox\" id=\"prodMerc\" defaultChecked={classProdMerc} onChange={() => handleCheck('prodMerc')} />\r\n            <label htmlFor=\"prodMerc\">Producer / Merchant / Processor / User</label>\r\n          </div>\r\n          <div className=\"trader-filter-option\">\r\n            <input type=\"checkbox\" id=\"swap\" defaultChecked={classSwap} onChange={() => handleCheck('swap')} />\r\n            <label htmlFor=\"swap\">Swap Dealer</label>\r\n          </div>\r\n          <div className=\"trader-filter-option\">\r\n            <input type=\"checkbox\" id=\"mMoney\" defaultChecked={classMMoney} onChange={() => handleCheck('mMoney')} />\r\n            <label htmlFor=\"mMoney\">Managed Money</label>\r\n          </div>\r\n          <div className=\"trader-filter-option\">\r\n            <input type=\"checkbox\" id=\"otherRep\" defaultChecked={classOtherRep} onChange={() => handleCheck('otherRep')} />\r\n            <label htmlFor=\"otherRep\">Other Reportables</label>\r\n          </div>\r\n          <div className=\"trader-filter-option\">\r\n            <input type=\"checkbox\" id=\"nonRep\" defaultChecked={classNonRep} onChange={() => handleCheck('nonRep')} />\r\n            <label htmlFor=\"nonRep\">Nonreportable Positions</label>\r\n          </div>\r\n        </ul>\r\n\r\n        <div className=\"historical-data-section\">\r\n          <h3>Positions</h3>\r\n          <div className=\"historical-data-chart chart-md\">\r\n            <PositionsDisaggregated\r\n              timeRange={timeRange}\r\n              handleWeekClick={props.handleWeekClick}\r\n              classProdMerc={classProdMerc}\r\n              classSwap={classSwap}\r\n              classMMoney={classMMoney}\r\n              classOtherRep={classOtherRep}\r\n              classNonRep={classNonRep}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"historical-data-section \">\r\n          <h3>Volume</h3>\r\n          <div className=\"historical-data-chart chart-sm\">\r\n            <VolumeDisaggregated\r\n              timeRange={timeRange}\r\n              handleWeekClick={props.handleWeekClick}\r\n              classProdMerc={classProdMerc}\r\n              classSwap={classSwap}\r\n              classMMoney={classMMoney}\r\n              classOtherRep={classOtherRep}\r\n              classNonRep={classNonRep}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box-footer\">\r\n          <a href=\"#top\"><ArrowUpCircleIcon /></a>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </section>\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nHistoricalDisaggregated.propTypes = { contracts: propTypes.object.isRequired }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts\r\n});\r\n\r\nexport default connect(mapStateToProps)(HistoricalDisaggregated);","import React, { useState, useEffect } from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport { connect } from 'react-redux';\r\nimport { getContractPositions, setSelectedContractType, setActiveWeek, setLoading, getContracts } from '../../actions/contractActions';\r\nimport propTypes from 'prop-types';\r\nimport FileTextIcon from '../Icons/FileTextIcon';\r\nimport Weekly from './Weekly';\r\nimport HistoricalFinancial from './Financial/HistoricalFinancial';\r\nimport HistoricalDisaggregated from './Disaggregated/HistoricalDisaggregated';\r\nimport dateFormatter from '../../helpers/dateFormatter';\r\n\r\nconst Contract = (props) => {\r\n\r\n  // const [activeWeekIndex, setActiveWeekIndex] = useState(0); //needed?\r\n  const [contractType] = useState('FutOnly'); //FutOnly || Combined\r\n\r\n  useEffect(() => {\r\n    props.getContractPositions(props.contractCategory, props.contractSlug, props.contracts.selectedContractType);\r\n  }, [props.getContractPositions, props.getContracts, contractType]);\r\n\r\n\r\n  const handleWeekClick = (rawDate) => {\r\n    //convert date format\r\n    const targetDate = dateFormatter(rawDate, 'short');\r\n    //get week index, category, and data for updating Weekly area\r\n    const weekIndex = props.contracts.selectedContractPositions.findIndex(obj => obj.As_of_Date_In_Form_YYMMDD === targetDate);\r\n    // setActiveWeekIndex(weekIndex); //needed?\r\n    const category = props.contracts.selectedContractActiveWeek.category;\r\n    const data = props.contracts.selectedContractPositions;\r\n    props.setActiveWeek(category, data, weekIndex);\r\n  }\r\n\r\n  const handleTypeClick = (contractType) => {\r\n    if (props.contracts.selectedContractType !== contractType) {\r\n      props.getContractPositions(props.contractCategory, props.contractSlug, contractType);\r\n    }\r\n  }\r\n\r\n  const serveType = () => {\r\n    if (props.contracts.selectedContractType === 'FutOnly') {\r\n      return ' (Futures Only)';\r\n    } else {\r\n      return ' (Futures and Options)';\r\n    }\r\n  }\r\n\r\n  const serveFilterButtons = (filter) => {\r\n    return (\r\n      <div className=\"box-filters\">\r\n        <div className={\"btn \" + (filter === 'FutOnly' ? 'btn-active' : 'btn-unactive')} onClick={() => handleTypeClick('FutOnly')}>Futures Only</div>\r\n        {/* <div className={\"btn \" + (filter === 'FutOnly' ? 'btn-active' : 'btn-unactive')} onClick={() => setContractType('FutOnly')}>Futures Only</div> */}\r\n        <div className={\"btn \" + (filter === 'Combined' ? 'btn-active' : 'btn-unactive')} onClick={() => handleTypeClick('Combined')}>Futures and Options</div>\r\n        {/* <div className={\"btn \" + (filter === 'Combined' ? 'btn-active' : 'btn-unactive')} onClick={() => setContractType('Combined')}>Futures and Options</div> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const serveContract = () => {\r\n    if (props.contractCategory === 'financial') {\r\n      return (\r\n        <section>\r\n          <Weekly />\r\n          <HistoricalFinancial handleWeekClick={handleWeekClick} />\r\n        </section>\r\n      );\r\n    } else if (props.contractCategory === 'disaggregated') {\r\n      return (\r\n        <section>\r\n          <Weekly />\r\n          <HistoricalDisaggregated handleWeekClick={handleWeekClick} />\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n\r\n  const serveContent = () => {\r\n    if (!props.contracts.loading) {\r\n      const marketName = props.contracts.selectedContractActiveWeek.mktName;\r\n      return (\r\n        <div>\r\n          <Helmet>\r\n            <title>{`${marketName} - Commitments of Traders`}</title>\r\n            <meta name=\"description\" content={`${marketName} meta desc goes here.`} />\r\n          </Helmet>\r\n          <main>\r\n            <section>\r\n              <div className=\"contract-header\">\r\n                <div className=\"contract-header-icon\">\r\n                  <FileTextIcon />\r\n                </div>\r\n                <div className=\"contract-header-content\">\r\n                  <div className=\"contract-header-main-row\">\r\n                    <h1>{marketName}{serveType()}</h1>\r\n                  </div>\r\n                  {serveFilterButtons(props.contracts.selectedContractType)}\r\n                </div>\r\n              </div>\r\n            </section>\r\n            {serveContract()}\r\n          </main>\r\n\r\n        </div>\r\n\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\"></div>\r\n          <div className=\"rect2\"></div>\r\n          <div className=\"rect3\"></div>\r\n          <div className=\"rect4\"></div>\r\n          <div className=\"rect5\"></div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return serveContent();\r\n}\r\n\r\nContract.propTypes = {\r\n  getContractPositions: propTypes.func.isRequired,\r\n  setSelectedContractType: propTypes.func.isRequired,\r\n  setLoading: propTypes.func.isRequired,\r\n  contracts: propTypes.object.isRequired,\r\n  getContracts: propTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contracts: state.contracts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getContractPositions, setSelectedContractType, setLoading, getContracts, setActiveWeek })(Contract);","import React from 'react';\r\n\r\nconst SettingsIcon = ({\r\n  style = {  },\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n<svg \r\n  xmlns=\"http://www.w3.org/2000/svg\" \r\n  width=\"24\" \r\n  height=\"24\" \r\n  viewBox=\"0 0 24 24\" \r\n  fill=\"none\" \r\n  stroke=\"currentColor\" \r\n  stroke-width=\"2\" \r\n  stroke-linecap=\"round\" \r\n  stroke-linejoin=\"round\" \r\n  class=\"feather feather-settings\"\r\n>\r\n  <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n  <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>\r\n</svg>\r\n\r\n);\r\n\r\nexport default SettingsIcon;","import React from 'react';\r\n\r\nconst EyeIcon = ({\r\n  style = {  },\r\n  fill = \"#000\",\r\n  width = \"100%\",\r\n  className = \"\",\r\n  viewBox = \"0 0 32 32\"\r\n}) => (\r\n\r\n\r\n<svg \r\n  xmlns=\"http://www.w3.org/2000/svg\" \r\n  width=\"24\" \r\n  height=\"24\"\r\n  viewBox=\"0 0 24 24\" \r\n  fill=\"none\" \r\n  stroke=\"currentColor\" \r\n  stroke-width=\"2\" \r\n  stroke-linecap=\"round\" \r\n  stroke-linejoin=\"round\" \r\n  class=\"feather feather-eye\"\r\n>\r\n  <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\r\n  <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n</svg>\r\n\r\n);\r\n\r\nexport default EyeIcon;","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\n//Return errors\r\nexport const returnErrors = (msg, status, id = null) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status, id }\r\n  }\r\n}\r\n\r\n//Clear errors\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS\r\n  }\r\n}","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types';\r\n\r\n//CHECK TOKEN AND LOAD USER\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  //User loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  axios.get('/api/auth/user', tokenConfig(getState))\r\n    .then(res => dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    }))\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({ type: AUTH_ERROR })\r\n    })\r\n}\r\n\r\n//REGISTER USER\r\nexport const register = ({ name, email, password }) => dispatch => {\r\n  //Headers\r\n  const config = { headers: { 'Content-Type': 'application/json' } };\r\n\r\n  //Request body\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  axios.post('/api/user', body, config)\r\n    .then(res => dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    }))\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\r\n      dispatch({ type: REGISTER_FAIL });\r\n    });\r\n}\r\n\r\n//LOGIN USER\r\nexport const login = ({ email, password }) => dispatch => {\r\n  //Headers\r\n  const config = { headers: { 'Content-Type': 'application/json' } }\r\n\r\n  //Request boddy\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  axios.post('/api/auth', body, config)\r\n    .then(res => dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    }))\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'))\r\n      dispatch({ type: LOGIN_FAIL });\r\n    })\r\n}\r\n\r\n//LOGOUT USER\r\nexport const logout = () => {\r\n  return { type: LOGOUT_SUCCESS }\r\n}\r\n\r\n//SETUP CONFIG/HEADERS AND TOKEN\r\nexport const tokenConfig = (getState) => {\r\n\r\n  //Get token from localStorage\r\n  const token = getState().auth.token;\r\n  //Headers\r\n\r\n  const config = { headers: { 'Content-type': 'application/json' } }\r\n\r\n  //If token, add to headers\r\n  if (token) config.headers['x-auth-token'] = token;\r\n\r\n  return config;\r\n} ","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\nimport { tokenConfig } from './authActions';\r\nimport { PARSE_FAIL, PARSE_SUCCESS, PARSE_LOADING } from './types';\r\n\r\nexport const parsePositions = (positions, category) => (dispatch, getState) => {\r\n\r\n  dispatch(setParsing());\r\n  axios.post('/api/admin/parser/' + category, positions, tokenConfig(getState))\r\n    .then(res => dispatch({\r\n      type: PARSE_SUCCESS,\r\n      payload: res.data\r\n    }))\r\n    .catch(err => {\r\n      if (err.response) {\r\n        dispatch(returnErrors(err.response.data, err.response.status, 'PARSE_FAIL'));\r\n        dispatch({ type: PARSE_FAIL });\r\n      }\r\n    })\r\n}\r\n\r\nexport const setParsing = () => {\r\n  return {\r\n    type: PARSE_LOADING\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport SettingsIcon from '../Icons/SettingsIcon';\r\nimport EyeIcon from '../Icons/EyeIcon';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { logout } from '../../actions/authActions';\r\nimport { parsePositions } from '../../actions/adminActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nconst AdmPanel = (props) => {\r\n  const [positions, setPositions] = useState([]);\r\n  const [parseCategory, setParseCategory] = useState('');\r\n\r\n  useEffect(() => {\r\n    props.clearErrors();\r\n  }, [props.clearErrors]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setPositions(e.target.value);\r\n  }\r\n\r\n  const handleParseSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.clearErrors();\r\n    props.parsePositions(positions, parseCategory);\r\n  }\r\n\r\n  const serveError = () => {\r\n    if (props.error.status) {\r\n      return (\r\n        <section>\r\n          <div className=\"box-white column-layout\">\r\n            <h4>Something went wrong! <span style={{ cursor: 'pointer' }} onClick={props.clearErrors}>[Dismiss]</span></h4>\r\n            <ul style={{ fontSize: '0.8rem' }}>\r\n              <li>Message: {props.error.msg}</li>\r\n              <li>Status: {props.error.status}</li>\r\n              <li>ID: {props.error.id}</li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      )\r\n    }\r\n  }\r\n\r\n  const serveParserLog = () => {\r\n    if (Array.isArray(props.parser.log)) {\r\n      const data = props.parser.log;\r\n      const formattedArr = data.map(logLine => <li style={{ fontSize: '0.8rem' }}>{logLine}</li>);\r\n      return (\r\n        <div>\r\n          <h3>Parsing done:</h3>\r\n          <ul>\r\n            {formattedArr}\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else if (props.parser.log === 'Loading...' && !props.error.status) {\r\n      return (\r\n        <div>\r\n          <h3>Parsing in progress...</h3>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n\r\n      <section>\r\n        <div className=\"contract-header\">\r\n          <div className=\"contract-header-icon\">\r\n            <SettingsIcon />\r\n          </div>\r\n          <div className=\"contract-header-content\">\r\n            <div className=\"contract-header-main-row\">\r\n              <h1>Adm stuff</h1>\r\n              <span onClick={props.logout}>Logout</span>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {serveError()}\r\n      <section>\r\n        <div className=\"box-white column-layout\">\r\n\r\n          <div className=\"box-header\">\r\n            <div className=\"box-title\">\r\n              <EyeIcon />\r\n              <h2>Weekly Data Parser</h2>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"parser-container\">\r\n            <h3>Chose Category, Paste JSON data, Click Parse, Cross fingers.</h3>\r\n\r\n            <form onSubmit={(e) => handleParseSubmit(e)} action={`http://localhost:3001/api/admin/parser/${parseCategory}`} method='POST'>\r\n              <input type=\"submit\" value=\"Parse\" className=\"data-url-submit\" />\r\n              <select name=\"category\" id=\"category-select\" onChange={(e) => setParseCategory(e.target.value)}>\r\n                <option value=\"\">Choose Category</option>\r\n                <option value=\"financial\" >Financial</option>\r\n                <option value=\"disaggregated\">Disaggregated</option>\r\n              </select>\r\n              <textarea name=\"data\" id=\"data\" rows={30} placeholder=\"Paste JSON here\" onChange={(e) => handleInputChange(e)}></textarea>\r\n            </form>\r\n\r\n            {/* <h3>Parser log:</h3>\r\n            <form>\r\n              <textarea name=\"log\" id=\"log\" rows={5} placeholder=\"Parse log\" value={props.parser.log}></textarea>\r\n            </form> */}\r\n\r\n            {serveParserLog()}\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </section>\r\n\r\n\r\n\r\n    </main>\r\n  );\r\n\r\n}\r\n\r\nAdmPanel.propTypes = {\r\n  isAuthenticated: propTypes.bool.isRequired,\r\n  logout: propTypes.func.isRequired,\r\n  parsePositions: propTypes.func.isRequired,\r\n  clearErrors: propTypes.func.isRequired,\r\n  error: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  parser: state.parser,\r\n  error: state.error,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout, parsePositions, clearErrors })(AdmPanel);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { login } from '../../actions/authActions';\r\n\r\nconst Login = (props) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n\r\n  useEffect(() => {\r\n    const error = props.error;\r\n    if (error) {\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        setMsg(error.msg.msg);\r\n      } else {\r\n        setMsg(null);\r\n      }\r\n    }\r\n  }, [props.error]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.login({ email, password });\r\n  }\r\n\r\n  const handleInputChange = (input, e) => {\r\n    if (e.target.value.length > 2) {\r\n      switch (input) {\r\n        case 'email':\r\n          setEmail(e.target.value);\r\n          break;\r\n        case 'password':\r\n          setPassword(e.target.value);\r\n          break;\r\n        default:\r\n          return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <section>\r\n        <div className=\"box-white column-layout\">\r\n          {msg ? <span>{msg}</span> : null}\r\n          <form onSubmit={(e) => handleSubmit(e)} autocomplete=\"on\" className=\"narrow-form\">\r\n            <input type=\"text\" name=\"email\" placeholder=\"email\" autocomplete=\"current-email\" onChange={(e) => handleInputChange('email', e)} />\r\n            <input type=\"password\" name=\"password\" placeholder=\"password\" autocomplete=\"current-password\" onChange={(e) => handleInputChange('password', e)} />\r\n            <input type=\"submit\" value=\"Login\" className=\"btn btn-unactive\" />\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n\r\n}\r\n\r\nLogin.propTypes = {\r\n  isAuthenticated: propTypes.bool.isRequired,\r\n  login: propTypes.func.isRequired,\r\n  clearErrors: propTypes.func.isRequired,\r\n  error: propTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport AdmPanel from './AdmPanel';\r\nimport Login from './Login';\r\n// import Register from './Register';\r\n\r\nconst Adm = (props) => {\r\n\r\n\r\n  const serveContent = () => {\r\n    if (props.isAuthenticated) {\r\n      return <AdmPanel />;\r\n    } else {\r\n      return <Login />;\r\n      // return <Register />;\r\n    }\r\n  }\r\n\r\n  return serveContent();\r\n\r\n}\r\n\r\n\r\nAdm.propTypes = {\r\n  isAuthenticated: propTypes.bool.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(Adm);","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      © 2020 Commitments of Traders - www.traderscmt.com\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import {\r\n    SET_LOADING, \r\n    GET_CONTRACTS, \r\n    FILTER_CONTRACTS, \r\n    UPDATE_SEARCH_FILTER, \r\n    UPDATE_LIST_FILTER, \r\n    GET_CONTRACT_POSITIONS, \r\n    SET_ACTIVE_WEEK, \r\n    SET_SELECTED_CONTRACT_TYPE\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  filteredList: [],\r\n  searchFilter: '',\r\n  listFilter: 'all',\r\n  selectedContractPositions: [],\r\n  selectedContractActiveWeek: {},\r\n  selectedContractType: 'FutOnly',\r\n  loading: true\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n  switch(action.type){\r\n    case SET_LOADING:\r\n      return{\r\n        ...state,\r\n        loading: action.payload\r\n      }\r\n    case GET_CONTRACTS:\r\n      return{\r\n        ...state,\r\n        list: action.payload,\r\n        loading: false\r\n      }\r\n    case FILTER_CONTRACTS:\r\n      return{\r\n        ...state,\r\n        filteredList: action.payload\r\n      }\r\n    case UPDATE_SEARCH_FILTER:\r\n      return{\r\n        ...state,\r\n        searchFilter: action.payload\r\n      }\r\n    case UPDATE_LIST_FILTER:\r\n      return{\r\n        ...state,\r\n        listFilter: action.payload\r\n      }\r\n    case SET_SELECTED_CONTRACT_TYPE:\r\n      return{\r\n        ...state,\r\n        selectedContractType: action.payload\r\n      }\r\n    case GET_CONTRACT_POSITIONS:\r\n      return{\r\n        ...state,\r\n        selectedContractPositions: action.payload\r\n      }\r\n    case SET_ACTIVE_WEEK:\r\n      return{\r\n        ...state,\r\n        selectedContractActiveWeek: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { PARSE_FAIL, PARSE_SUCCESS, PARSE_LOADING } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  log: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case PARSE_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        log: 'Loading...'\r\n      }\r\n    case PARSE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        log: action.payload,\r\n        isLoading: false,\r\n      }\r\n    case PARSE_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  isLoading: false,\r\n  user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      }\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload\r\n      }\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      }\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT_SUCCESS:\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id\r\n      }\r\n    case CLEAR_ERRORS:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport contractReducer from './contractReducer';\r\nimport adminReducer from './adminReducer';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\n\r\nexport default combineReducers({\r\n  contracts: contractReducer,\r\n  auth: authReducer,\r\n  parser: adminReducer,\r\n  error: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer, initialState, compose(\r\n  applyMiddleware(...middleware),\r\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass GoogleAnalytics extends React.Component {\r\n    componentWillUpdate({ location, history }) {\r\n        const gtag = window.gtag;\r\n\r\n        if (location.pathname === this.props.location.pathname) {\r\n            // don't log identical link clicks (nav links likely)\r\n            return;\r\n        }\r\n\r\n        if (history.action === 'PUSH' &&\r\n            typeof (gtag) === 'function') {\r\n            gtag('config', 'UA-164495098-1', {\r\n                'page_title': document.title,\r\n                'page_location': window.location.href,\r\n                'page_path': location.pathname\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withRouter(GoogleAnalytics);","import React, { useEffect } from 'react';\nimport NavBar from './Components/NavBar';\nimport Main from './Components/Main/Main';\nimport Contract from './Components/Contract/Contract';\nimport Adm from './Components/Adm/Adm';\nimport Footer from './Components/Footer';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n// import { createBrowserHistory } from 'history'; //GAnalytics\n// import ReactGA from 'react-ga';\nimport GA from './Components/GA';\n\n// const history = createBrowserHistory();\n// Initialize google analytics page view tracking\n\n\nconst App = () => {\n\n  // useEffect(() => {\n  //   ReactGA.initialize('UA-164495098-1');\n\n  //   //GA pageviews report\n  //   ReactGA.pageview(window.location.pathname + window.location.search);\n  // }, [])\n\n  return (\n    <Provider store={store}>\n      {/* <Router history={history}> */}\n      <Router>\n        <div>\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact component={Main} />\n            <Route\n              path=\"/contract/:contractcategory/:contractslug\"\n              render={({ match }) =>\n                <Contract\n                  contractSlug={match.params.contractslug}\n                  contractCategory={match.params.contractcategory}\n                />\n              }\n            />\n            <Route path=\"/nw16ug\" exact component={Adm} />\n            <Route path=\"*\">\n              <Redirect to='/' />\n            </Route>\n          </Switch>\n          <GA />\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const dateFormatter = (strDate, outputFormat) => {\r\n  if(outputFormat==='long'){                    //get string as YYMMDD, return string as YYYY/MM/DD\r\n    const day = strDate.slice(4,6);\r\n    const month = strDate.substring(2,4);\r\n    const year = '20' + strDate.substring(0,2);\r\n    return `${year}/${month}/${day}`;\r\n  } \r\n  else if (outputFormat==='short'){             //get string as YYYY/MM/DD, return string as YYMMDD\r\n    let date = strDate.toString().replace(/\\//g,'');\r\n    date = date.slice(2,8);\r\n    return date;\r\n  }\r\n}\r\n\r\nmodule.exports = dateFormatter;"],"sourceRoot":""}